{"ast":null,"code":"import React from 'react';\nimport isPlainObject from 'lodash/isPlainObject';\n\nfunction getTotalByColumns(columns) {\n  var totalFlexGrow = 0;\n  var totalWidth = 0;\n\n  var count = function count(items) {\n    Array.from(items).forEach(function (column) {\n      if ( /*#__PURE__*/React.isValidElement(column)) {\n        var _ref = column.props,\n            flexGrow = _ref.flexGrow,\n            _ref$width = _ref.width,\n            width = _ref$width === void 0 ? 0 : _ref$width;\n        totalFlexGrow += flexGrow || 0;\n        totalWidth += flexGrow ? 0 : width;\n      } else if (Array.isArray(column)) {\n        count(column);\n      }\n    });\n  };\n\n  if (Array.isArray(columns)) {\n    count(columns);\n  } else if (isPlainObject(columns)) {\n    var _columns$props = columns === null || columns === void 0 ? void 0 : columns.props,\n        flexGrow = _columns$props.flexGrow,\n        _columns$props$width = _columns$props.width,\n        width = _columns$props$width === void 0 ? 0 : _columns$props$width;\n\n    totalFlexGrow = flexGrow || 0;\n    totalWidth = flexGrow ? 0 : width;\n  }\n\n  return {\n    totalFlexGrow: totalFlexGrow,\n    totalWidth: totalWidth\n  };\n}\n\nexport default getTotalByColumns;","map":{"version":3,"names":["React","isPlainObject","getTotalByColumns","columns","totalFlexGrow","totalWidth","count","items","Array","from","forEach","column","isValidElement","_ref","props","flexGrow","_ref$width","width","isArray","_columns$props","_columns$props$width"],"sources":["C:/Users/jaink/OneDrive/Desktop/New folder (4)/chameleon-website/node_modules/rsuite-table/es/utils/getTotalByColumns.js"],"sourcesContent":["import React from 'react';\r\nimport isPlainObject from 'lodash/isPlainObject';\r\n\r\nfunction getTotalByColumns(columns) {\r\n  var totalFlexGrow = 0;\r\n  var totalWidth = 0;\r\n\r\n  var count = function count(items) {\r\n    Array.from(items).forEach(function (column) {\r\n      if ( /*#__PURE__*/React.isValidElement(column)) {\r\n        var _ref = column.props,\r\n            flexGrow = _ref.flexGrow,\r\n            _ref$width = _ref.width,\r\n            width = _ref$width === void 0 ? 0 : _ref$width;\r\n        totalFlexGrow += flexGrow || 0;\r\n        totalWidth += flexGrow ? 0 : width;\r\n      } else if (Array.isArray(column)) {\r\n        count(column);\r\n      }\r\n    });\r\n  };\r\n\r\n  if (Array.isArray(columns)) {\r\n    count(columns);\r\n  } else if (isPlainObject(columns)) {\r\n    var _columns$props = columns === null || columns === void 0 ? void 0 : columns.props,\r\n        flexGrow = _columns$props.flexGrow,\r\n        _columns$props$width = _columns$props.width,\r\n        width = _columns$props$width === void 0 ? 0 : _columns$props$width;\r\n\r\n    totalFlexGrow = flexGrow || 0;\r\n    totalWidth = flexGrow ? 0 : width;\r\n  }\r\n\r\n  return {\r\n    totalFlexGrow: totalFlexGrow,\r\n    totalWidth: totalWidth\r\n  };\r\n}\r\n\r\nexport default getTotalByColumns;"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,sBAA1B;;AAEA,SAASC,iBAAT,CAA2BC,OAA3B,EAAoC;EAClC,IAAIC,aAAa,GAAG,CAApB;EACA,IAAIC,UAAU,GAAG,CAAjB;;EAEA,IAAIC,KAAK,GAAG,SAASA,KAAT,CAAeC,KAAf,EAAsB;IAChCC,KAAK,CAACC,IAAN,CAAWF,KAAX,EAAkBG,OAAlB,CAA0B,UAAUC,MAAV,EAAkB;MAC1C,KAAK,aAAaX,KAAK,CAACY,cAAN,CAAqBD,MAArB,CAAlB,EAAgD;QAC9C,IAAIE,IAAI,GAAGF,MAAM,CAACG,KAAlB;QAAA,IACIC,QAAQ,GAAGF,IAAI,CAACE,QADpB;QAAA,IAEIC,UAAU,GAAGH,IAAI,CAACI,KAFtB;QAAA,IAGIA,KAAK,GAAGD,UAAU,KAAK,KAAK,CAApB,GAAwB,CAAxB,GAA4BA,UAHxC;QAIAZ,aAAa,IAAIW,QAAQ,IAAI,CAA7B;QACAV,UAAU,IAAIU,QAAQ,GAAG,CAAH,GAAOE,KAA7B;MACD,CAPD,MAOO,IAAIT,KAAK,CAACU,OAAN,CAAcP,MAAd,CAAJ,EAA2B;QAChCL,KAAK,CAACK,MAAD,CAAL;MACD;IACF,CAXD;EAYD,CAbD;;EAeA,IAAIH,KAAK,CAACU,OAAN,CAAcf,OAAd,CAAJ,EAA4B;IAC1BG,KAAK,CAACH,OAAD,CAAL;EACD,CAFD,MAEO,IAAIF,aAAa,CAACE,OAAD,CAAjB,EAA4B;IACjC,IAAIgB,cAAc,GAAGhB,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACW,KAA/E;IAAA,IACIC,QAAQ,GAAGI,cAAc,CAACJ,QAD9B;IAAA,IAEIK,oBAAoB,GAAGD,cAAc,CAACF,KAF1C;IAAA,IAGIA,KAAK,GAAGG,oBAAoB,KAAK,KAAK,CAA9B,GAAkC,CAAlC,GAAsCA,oBAHlD;;IAKAhB,aAAa,GAAGW,QAAQ,IAAI,CAA5B;IACAV,UAAU,GAAGU,QAAQ,GAAG,CAAH,GAAOE,KAA5B;EACD;;EAED,OAAO;IACLb,aAAa,EAAEA,aADV;IAELC,UAAU,EAAEA;EAFP,CAAP;AAID;;AAED,eAAeH,iBAAf"},"metadata":{},"sourceType":"module"}