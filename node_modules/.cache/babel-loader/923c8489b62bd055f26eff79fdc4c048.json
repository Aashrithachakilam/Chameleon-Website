{"ast":null,"code":"import ToastContainer from './ToastContainer';\nvar defaultContainerId = 'default';\nvar containers = new Map();\n/**\r\n * Create a container by Id.\r\n * @param containerId\r\n * @param options\r\n */\n\nfunction createContainer(containerId, props) {\n  var _ToastContainer$getIn = ToastContainer.getInstance(props),\n      container = _ToastContainer$getIn[0];\n\n  containers.set(containerId || defaultContainerId, container);\n  return container;\n}\n/**\r\n * Get the container by ID. Use default ID when ID is not available.\r\n * @param containerId\r\n */\n\n\nfunction getContainer(containerId) {\n  if (containers.size == 0) {\n    return null;\n  }\n\n  return containers.get(containerId || defaultContainerId);\n}\n\nvar toaster = function toaster(message) {\n  return toaster.push(message);\n};\n\ntoaster.push = function (message, options) {\n  var _container$current;\n\n  if (options === void 0) {\n    options = {};\n  }\n\n  var container = getContainer(options.placement);\n\n  if (!container) {\n    var _options$placement;\n\n    container = createContainer((_options$placement = options.placement) !== null && _options$placement !== void 0 ? _options$placement : '', options);\n  }\n\n  return (_container$current = container.current) === null || _container$current === void 0 ? void 0 : _container$current.push(message);\n};\n\ntoaster.remove = function (key) {\n  containers.forEach(function (c) {\n    var _c$current;\n\n    return (_c$current = c.current) === null || _c$current === void 0 ? void 0 : _c$current.remove(key);\n  });\n};\n\ntoaster.clear = function () {\n  containers.forEach(function (c) {\n    var _c$current2;\n\n    return (_c$current2 = c.current) === null || _c$current2 === void 0 ? void 0 : _c$current2.clear();\n  });\n};\n\nexport default toaster;","map":{"version":3,"names":["ToastContainer","defaultContainerId","containers","Map","createContainer","containerId","props","_ToastContainer$getIn","getInstance","container","set","getContainer","size","get","toaster","message","push","options","_container$current","placement","_options$placement","current","remove","key","forEach","c","_c$current","clear","_c$current2"],"sources":["C:/Users/jaink/OneDrive/Desktop/New folder (4)/chameleon-website/node_modules/rsuite/esm/toaster/toaster.js"],"sourcesContent":["import ToastContainer from './ToastContainer';\r\nvar defaultContainerId = 'default';\r\nvar containers = new Map();\r\n/**\r\n * Create a container by Id.\r\n * @param containerId\r\n * @param options\r\n */\r\n\r\nfunction createContainer(containerId, props) {\r\n  var _ToastContainer$getIn = ToastContainer.getInstance(props),\r\n      container = _ToastContainer$getIn[0];\r\n\r\n  containers.set(containerId || defaultContainerId, container);\r\n  return container;\r\n}\r\n/**\r\n * Get the container by ID. Use default ID when ID is not available.\r\n * @param containerId\r\n */\r\n\r\n\r\nfunction getContainer(containerId) {\r\n  if (containers.size == 0) {\r\n    return null;\r\n  }\r\n\r\n  return containers.get(containerId || defaultContainerId);\r\n}\r\n\r\nvar toaster = function toaster(message) {\r\n  return toaster.push(message);\r\n};\r\n\r\ntoaster.push = function (message, options) {\r\n  var _container$current;\r\n\r\n  if (options === void 0) {\r\n    options = {};\r\n  }\r\n\r\n  var container = getContainer(options.placement);\r\n\r\n  if (!container) {\r\n    var _options$placement;\r\n\r\n    container = createContainer((_options$placement = options.placement) !== null && _options$placement !== void 0 ? _options$placement : '', options);\r\n  }\r\n\r\n  return (_container$current = container.current) === null || _container$current === void 0 ? void 0 : _container$current.push(message);\r\n};\r\n\r\ntoaster.remove = function (key) {\r\n  containers.forEach(function (c) {\r\n    var _c$current;\r\n\r\n    return (_c$current = c.current) === null || _c$current === void 0 ? void 0 : _c$current.remove(key);\r\n  });\r\n};\r\n\r\ntoaster.clear = function () {\r\n  containers.forEach(function (c) {\r\n    var _c$current2;\r\n\r\n    return (_c$current2 = c.current) === null || _c$current2 === void 0 ? void 0 : _c$current2.clear();\r\n  });\r\n};\r\n\r\nexport default toaster;"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,kBAA3B;AACA,IAAIC,kBAAkB,GAAG,SAAzB;AACA,IAAIC,UAAU,GAAG,IAAIC,GAAJ,EAAjB;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,eAAT,CAAyBC,WAAzB,EAAsCC,KAAtC,EAA6C;EAC3C,IAAIC,qBAAqB,GAAGP,cAAc,CAACQ,WAAf,CAA2BF,KAA3B,CAA5B;EAAA,IACIG,SAAS,GAAGF,qBAAqB,CAAC,CAAD,CADrC;;EAGAL,UAAU,CAACQ,GAAX,CAAeL,WAAW,IAAIJ,kBAA9B,EAAkDQ,SAAlD;EACA,OAAOA,SAAP;AACD;AACD;AACA;AACA;AACA;;;AAGA,SAASE,YAAT,CAAsBN,WAAtB,EAAmC;EACjC,IAAIH,UAAU,CAACU,IAAX,IAAmB,CAAvB,EAA0B;IACxB,OAAO,IAAP;EACD;;EAED,OAAOV,UAAU,CAACW,GAAX,CAAeR,WAAW,IAAIJ,kBAA9B,CAAP;AACD;;AAED,IAAIa,OAAO,GAAG,SAASA,OAAT,CAAiBC,OAAjB,EAA0B;EACtC,OAAOD,OAAO,CAACE,IAAR,CAAaD,OAAb,CAAP;AACD,CAFD;;AAIAD,OAAO,CAACE,IAAR,GAAe,UAAUD,OAAV,EAAmBE,OAAnB,EAA4B;EACzC,IAAIC,kBAAJ;;EAEA,IAAID,OAAO,KAAK,KAAK,CAArB,EAAwB;IACtBA,OAAO,GAAG,EAAV;EACD;;EAED,IAAIR,SAAS,GAAGE,YAAY,CAACM,OAAO,CAACE,SAAT,CAA5B;;EAEA,IAAI,CAACV,SAAL,EAAgB;IACd,IAAIW,kBAAJ;;IAEAX,SAAS,GAAGL,eAAe,CAAC,CAACgB,kBAAkB,GAAGH,OAAO,CAACE,SAA9B,MAA6C,IAA7C,IAAqDC,kBAAkB,KAAK,KAAK,CAAjF,GAAqFA,kBAArF,GAA0G,EAA3G,EAA+GH,OAA/G,CAA3B;EACD;;EAED,OAAO,CAACC,kBAAkB,GAAGT,SAAS,CAACY,OAAhC,MAA6C,IAA7C,IAAqDH,kBAAkB,KAAK,KAAK,CAAjF,GAAqF,KAAK,CAA1F,GAA8FA,kBAAkB,CAACF,IAAnB,CAAwBD,OAAxB,CAArG;AACD,CAhBD;;AAkBAD,OAAO,CAACQ,MAAR,GAAiB,UAAUC,GAAV,EAAe;EAC9BrB,UAAU,CAACsB,OAAX,CAAmB,UAAUC,CAAV,EAAa;IAC9B,IAAIC,UAAJ;;IAEA,OAAO,CAACA,UAAU,GAAGD,CAAC,CAACJ,OAAhB,MAA6B,IAA7B,IAAqCK,UAAU,KAAK,KAAK,CAAzD,GAA6D,KAAK,CAAlE,GAAsEA,UAAU,CAACJ,MAAX,CAAkBC,GAAlB,CAA7E;EACD,CAJD;AAKD,CAND;;AAQAT,OAAO,CAACa,KAAR,GAAgB,YAAY;EAC1BzB,UAAU,CAACsB,OAAX,CAAmB,UAAUC,CAAV,EAAa;IAC9B,IAAIG,WAAJ;;IAEA,OAAO,CAACA,WAAW,GAAGH,CAAC,CAACJ,OAAjB,MAA8B,IAA9B,IAAsCO,WAAW,KAAK,KAAK,CAA3D,GAA+D,KAAK,CAApE,GAAwEA,WAAW,CAACD,KAAZ,EAA/E;EACD,CAJD;AAKD,CAND;;AAQA,eAAeb,OAAf"},"metadata":{},"sourceType":"module"}